{
    "en_vn": {
        "data": {
            "content": null,
            "word": "traversal"
        }
    },
    "en_en": {
        "data": {
            "content": null,
            "word": "traversal"
        }
    },
    "synonyms": {
        "data": {
            "content": null,
            "word": "traversal"
        }
    },
    "grammar": {
        "data": {
            "content": null,
            "word": "traversal"
        }
    },
    "specialist": {
        "data": {
            "content": "<div class=\"dict--title\">T\u1eeb \u0111i\u1ec3n K\u1ef9 thu\u1eadt (EN)</div><div class=\"dict--content\"><table cellspacing=\"0\" cellpadding=\"0\" border=\"0\"><tbody><tr><td/><td><font color=\"#999\">\u25a0</font><font>\u00a0ch\u1ed7 giao nhau</font></td></tr></tbody></table><table cellspacing=\"0\" cellpadding=\"0\" border=\"0\"><tbody><tr><td/><td><font color=\"#999\">\u25a0</font><font>\u00a0qu\u00e9t</font></td></tr></tbody></table><table cellspacing=\"0\" cellpadding=\"0\" border=\"0\"><tbody><tr><td/><td><font color=\"#999\">\u25a0</font><font>\u00a0s\u1ef1 c\u1eaft nhau</font></td></tr></tbody></table><table cellspacing=\"0\" cellpadding=\"0\" border=\"0\"><tbody><tr><td/><td><font color=\"#999\">\u25a0</font><font>\u00a0s\u1ef1 giao nhau</font></td></tr></tbody></table><table cellspacing=\"0\" cellpadding=\"0\" border=\"0\"><tbody><tr><td/><td><b><font color=\"#1a76bf\">L\u0129nh v\u1ef1c:</font></b><font color=\"#666699\"> \u0111i\u1ec7n l\u1ea1nh</font></td></tr></tbody></table><table cellspacing=\"0\" cellpadding=\"0\" border=\"0\"><tbody><tr><td/><td><font color=\"#999\">\u25a0</font><font>\u00a0ch\u1ed7 c\u1eaft nhau</font></td></tr></tbody></table></div>",
            "word": "traversal"
        }
    },
    "sentences": [
        {
            "en": "Perform a <em>traversal</em> of the data structure.",
            "vi": "Th\u1ef1c thi duy\u1ec7t c\u1ea5u tr\u00fac d\u1eef li\u1ec7u \u1ea5y."
        },
        {
            "en": "For the linked list, a first next <em>traversal</em> order will produce the elements in key order.",
            "vi": "V\u1edbi danh s\u00e1ch k\u1ebft n\u1ed1i c\u00f3 th\u1ee9 t\u1ef1, c\u00e1c duy\u1ec7t k\u1ebf c\u1eadn tr\u01b0\u1edbc h\u1ebft s\u1ebd s\u1ea3n ra c\u00e1c ph\u1ea7n t\u1eed theo th\u1ee9 t\u1ef1 kho\u00e1."
        },
        {
            "en": "For the binary search tree, use an in order <em>traversal</em> iterator.",
            "vi": "C\u00f2n v\u1edbi c\u00e2y nh\u1ecb ph\u00e2n t\u00ecm ki\u1ebfm, th\u00ec ph\u1ea3i d\u00f9ng m\u1ed9t b\u1ed9 l\u1eb7p du\u1ef5\u00eat c\u00e2y theo th\u1ee9 t\u1ef1 gi\u1eefa."
        },
        {
            "en": "Iterators greatly simplify the <em>traversal</em> of some of the more complex data structures, such at binary trees.",
            "vi": "C\u00e1c b\u1ed9 l\u1eb7p qu\u1ea3 th\u1ef1c \u0111\u01a1n gi\u1ea3n ho\u00e1 c\u00e1c ph\u00e9p duy\u1ec7t v\u00e0i c\u1ea5u tr\u00fac d\u1eef li\u1ec7uph\u1ee9c t\u1ea1p h\u01a1n, ch\u1eb3ng h\u1ea1n c\u00e2y nh\u1ecb ph\u00e2n."
        },
        {
            "en": "Note: stacks are also used by binary search tree iterators to keep track of the nodes a <em>traversal</em> has visited on its way through the tree.",
            "vi": "L\u01b0u \u00fd: ng\u0103n x\u1ebfp c\u0169ng \u0111\u01b0\u1ee3c c\u00e1c b\u1ed9 l\u1eb7p cho c\u00e2y nh\u1ecb ph\u00e2n t\u00ecm ki\u1ebfm v\u1eadn d\u1ee5ng, d\u1ec3 theo d\u00f5i c\u00e1c n\u00fat m\u00e0 m\u1ed9t ph\u00e9p duy\u1ec7t c\u00e2y \u0111\u00e3 th\u0103m tr\u00ean su\u1ed1t c\u00e2y theo cung c\u00e1ch c\u1ee7a ph\u00e9p duy\u1ec7t."
        },
        {
            "en": "Returns a pointer to the first node this function is use by a list iterator so it knows where to start its <em>traversal</em>.",
            "vi": "Tr\u1ea3 v\u1ec1 m\u1ed9t con tr\u1ecf tr\u1ecf t\u1edbi n\u00fat \u0111\u1ea7u ti\u00ean t\u00ednh n\u0103ng n\u00e0y s\u1ebd \u0111\u01b0\u1ee3c \u0111\u01b0\u1ee3c l\u1eb7p danh s\u00e1ch v\u1eadn d\u1ee5ng \u0111\u1ec3 n\u00f3 bi\u1ebft ph\u1ea3i kh\u1edfi duy\u1ec7t danh s\u00e1ch t\u1eeb \u0111\u1ea7u."
        },
        {
            "en": "The <em>traversal</em> might for example, be used to display data from the objects in key order or to copy object data into a file, database, array, or other data structure.",
            "vi": "Ph\u00e9p duy\u1ec7t n\u00e0y c\u00f3 th\u1ec3 dung \u0111\u1ec3 v\u00ed d\u1ee5, hi\u1ec3n th\u1ecb d\u1eef li\u1ec7u t\u1eeb c\u00e1c \u0111\u1ed1i t\u01b0\u1ee3ng theo th\u1ee9 t\u1ef1 kho\u00e1 or \u0111\u1ec3 ch\u00e9p c\u00e1c d\u1eef li\u1ec7u \u1ea5y v\u00e0o m\u1ed9t t\u1eadp tin, c\u01a1 s\u1edf d\u1eef li\u1ec7u, m\u1ea3ng, hay c\u1ea5u tr\u00fac d\u1eef li\u1ec7u."
        }
    ],
    "suggestions": []
}